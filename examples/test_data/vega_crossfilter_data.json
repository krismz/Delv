{
  "width": 200,
  "height": 160,
  
  "data": [
    {
      "name": "flights",
      "url": "data/flights-2k.json",
      "format": {"type": "json", "parse": {"date": "date"}},
      "transform": [
        {"type": "formula", "field": "hour", "expr": "hours(datum.date)"},
        {
          "type": "formula", 
          "field": "day", 
          "expr": "datetime((month(datum.date)+1) + '/' + date(datum.date) + '/2001')"
        }
      ]
    },
    {
      "name": "times",
      "source": "flights",
      "transform": [
        {"type": "filter", "test": "((minDay <= maxDay && maxDay <= minDay) || (datum.day >= minDay && datum.day <= maxDay)) && (minDist == maxDist || (datum.distance >= minDist && datum.distance <= maxDist)) && (minDelay == maxDelay || (datum.delay >= minDelay && datum.delay <= maxDelay))"},
        {
          "type": "bin",
          "field": "hour",
          "min": 0,
          "max": 24,
          "step": 1
        },
        {
          "type": "aggregate",
          "groupby": ["bin"],
          "summarize": {"delay": ["count"]}
        }
      ]
    },
    {
      "name": "delay",
      "source": "flights",
      "transform": [
        {"type": "filter", "test": "((minDay <= maxDay && maxDay <= minDay) || (datum.day >= minDay && datum.day <= maxDay)) && (minDist == maxDist || (datum.distance >= minDist && datum.distance <= maxDist)) && (minTime == maxTime || (datum.hour >= minTime && datum.hour <= maxTime))"},
        {
          "type": "bin",
          "field": "delay",
          "min": -60,
          "max": 140,
          "step": 10
        },
        {"type": "filter", "test": "datum.bin <= 140"},
        {
          "type": "aggregate",
          "groupby": ["bin"],
          "summarize": {"delay": ["count"]}
        }
      ]
    },
    {
      "name": "distance",
      "source": "flights",
      "transform": [
        {"type": "filter", "test": "((minDay <= maxDay && maxDay <= minDay) || (datum.day >= minDay && datum.day <= maxDay)) && (minDelay == maxDelay || (datum.delay >= minDelay && datum.delay <= maxDelay)) && (minTime == maxTime || (datum.hour >= minTime && datum.hour <= maxTime))"},
        {
          "type": "bin",
          "field": "distance",
          "min": 0,
          "max": 2000,
          "step": 50
        },
        {"type": "filter", "test": "datum.bin <= 2000"},
        {
          "type": "aggregate",
          "groupby": ["bin"],
          "summarize": {"delay": ["count"]}
        }
      ]
    },
    {
      "name": "date",
      "source": "flights",
      "transform": [
        {"type": "filter", "test": "(minDist == maxDist || (datum.distance >= minDist && datum.distance <= maxDist)) && (minDelay == maxDelay || (datum.delay >= minDelay && datum.delay <= maxDelay)) && (minTime == maxTime || (datum.hour >= minTime && datum.hour <= maxTime))"},
        {"type": "filter", "test": "datum.day < datetime('4/1/2001')"},
        {
          "type": "aggregate",
          "groupby": ["day"],
          "summarize": {"delay": ["count"]}
        }        
      ]
    }
  ],
  
  "signals": [
    {"name": "minTime", "init": -1},
    {"name": "maxTime", "init": -1},
    {"name": "minDelay", "init": -1},
    {"name": "maxDelay", "init": -1},
    {"name": "minDist", "init": -1},
    {"name": "maxDist", "init": -1},
    {"name": "minDay", "init":{"expr": "datetime('1/1/2001')"}},
    {"name": "maxDay", "init":{"expr": "datetime('3/31/2001')"}}
  ],
  
  "marks": [
    {
      "type": "rect",
      "properties": {
        "enter": {
          "fill": {"value": "black"},
          "fillOpacity": {"value": 0.2},
          "x": {"value": 20},
          "x2": {"value": 100},
          "y": {"value": 30},
          "y2": {"value": 150}
        }
      }
    }
  ]
}
